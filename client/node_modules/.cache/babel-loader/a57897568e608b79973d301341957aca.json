{"remainingRequest":"G:\\1WORK\\cockrid34r\\client\\node_modules\\babel-loader\\lib\\index.js!G:\\1WORK\\cockrid34r\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!G:\\1WORK\\cockrid34r\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\1WORK\\cockrid34r\\client\\node_modules\\particles-bg-vue\\src\\particles-bg\\particles\\PolygonParticles.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\1WORK\\cockrid34r\\client\\node_modules\\particles-bg-vue\\src\\particles-bg\\particles\\PolygonParticles.vue","mtime":1660813555617},{"path":"G:\\1WORK\\cockrid34r\\client\\babel.config.js","mtime":1660813200039},{"path":"G:\\1WORK\\cockrid34r\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660813139587},{"path":"G:\\1WORK\\cockrid34r\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1660813146986},{"path":"G:\\1WORK\\cockrid34r\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660813139587},{"path":"G:\\1WORK\\cockrid34r\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1660813157465}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IENhbnZhc0NvbXAgZnJvbSAiLi9DYW52YXNDb21wLnZ1ZSI7CmltcG9ydCBQcm90b24gZnJvbSAicHJvdG9uLWVuZ2luZSI7CmltcG9ydCBSQUZNYW5hZ2VyIGZyb20gInJhZi1tYW5hZ2VyIjsKY29uc3QgQ09MT1IgPSBbIiNmNmI5M2IiLCAiIzE4ZGNmZiIsICIjY2Q4NGYxIiwgIiNFRDRDNjciLCAiI2ZmZmZmZiIsICIjYjcxNTQwIiwgIiMzMmZmN2UiLCAiI2ZmMzgzOCJdOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlBvbHlnb25QYXJ0aWNsZXMiLAogIGNvbXBvbmVudHM6IHsKICAgIENhbnZhc0NvbXAKICB9LAogIHByb3BzOiB7CiAgICBjYW52YXM6IE9iamVjdCwKICAgIGNhbnZhczogT2JqZWN0LAogICAgYmc6IEJvb2xlYW4sCiAgICBjb2xvcjogU3RyaW5nLAogICAgbnVtOiBOdW1iZXIsCiAgICBjb25maWc6IHt9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjYW52YXNJbml0ZWQoY2FudmFzKSB7CiAgICAgIGNvbnN0IHdpZHRoID0gY2FudmFzLndpZHRoOwogICAgICBjb25zdCBoZWlnaHQgPSBjYW52YXMuaGVpZ2h0OwogICAgICB0aGlzLmNyZWF0ZVByb3RvbihjYW52YXMpOwogICAgICB0aGlzLmNyZWF0ZUVtaXR0ZXIoewogICAgICAgIGNhbnZhcywKICAgICAgICB4OiB3aWR0aCAvIDIsCiAgICAgICAgeTogaGVpZ2h0IC8gMiwKICAgICAgICBtYWluRW1pdHRlcjogdHJ1ZSwKICAgICAgICB6b25lOiAiYm91bmQiCiAgICAgIH0pOwogICAgICBSQUZNYW5hZ2VyLmFkZCh0aGlzLnJlbmRlclByb3Rvbik7CiAgICB9LAoKICAgIGNhbnZhc1Jlc2l6ZSh7CiAgICAgIHdpZHRoLAogICAgICBoZWlnaHQKICAgIH0pIHsKICAgICAgdGhpcy5wcm90b24ucmVuZGVyZXJzWzBdLnJlc2l6ZSh3aWR0aCwgaGVpZ2h0KTsKICAgIH0sCgogICAgY2FudmFzTW91c2VEb3duKGUpIHt9LAoKICAgIGNyZWF0ZVByb3RvbihjYW52YXMpIHsKICAgICAgdGhpcy5wcm90b24gPSBuZXcgUHJvdG9uKCk7CiAgICAgIGNvbnN0IHJlbmRlcmVyID0gdGhpcy5jcmVhdGVSZW5kZXJlcihjYW52YXMpOwogICAgICB0aGlzLnByb3Rvbi5hZGRSZW5kZXJlcihyZW5kZXJlcik7CiAgICB9LAoKICAgIGNyZWF0ZVJlbmRlcmVyKGNhbnZhcykgewogICAgICBjb25zdCBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoIjJkIik7CiAgICAgIGNvbnN0IHJlbmRlcmVyID0gbmV3IFByb3Rvbi5DdXN0b21SZW5kZXJlcigpOwoKICAgICAgcmVuZGVyZXIub25Qcm90b25VcGRhdGUgPSAoKSA9PiB7CiAgICAgICAgY29udGV4dC5jbGVhclJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTsKICAgICAgfTsKCiAgICAgIHJlbmRlcmVyLm9uUGFydGljbGVDcmVhdGVkID0gcGFydGljbGUgPT4gewogICAgICAgIHBhcnRpY2xlLmRhdGEuY291bnQgPSBQcm90b24uTWF0aFV0aWwucmFuZG9tQVRvQigzLCAxMCwgdHJ1ZSk7CiAgICAgIH07CgogICAgICByZW5kZXJlci5vblBhcnRpY2xlVXBkYXRlID0gcGFydGljbGUgPT4gewogICAgICAgIGNvbnRleHQuc2F2ZSgpOwogICAgICAgIGNvbnRleHQuZ2xvYmFsQWxwaGEgPSBwYXJ0aWNsZS5hbHBoYTsKICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9IHBhcnRpY2xlLmNvbG9yOwogICAgICAgIGNvbnRleHQudHJhbnNsYXRlKHBhcnRpY2xlLnAueCwgcGFydGljbGUucC55KTsKICAgICAgICBjb250ZXh0LnJvdGF0ZShQcm90b24uTWF0aFV0aWwuZGVncmVlVHJhbnNmb3JtKHBhcnRpY2xlLnJvdGF0aW9uKSk7CiAgICAgICAgY29udGV4dC50cmFuc2xhdGUoLXBhcnRpY2xlLnAueCwgLXBhcnRpY2xlLnAueSk7CiAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTsKICAgICAgICBkcmF3UG9seWdvbihwYXJ0aWNsZSwgcGFydGljbGUuZGF0YS5jb3VudCk7CiAgICAgICAgY29udGV4dC5jbG9zZVBhdGgoKTsKICAgICAgICBjb250ZXh0LmZpbGwoKTsKICAgICAgICBjb250ZXh0Lmdsb2JhbEFscGhhID0gMTsKICAgICAgICBjb250ZXh0LnJlc3RvcmUoKTsKICAgICAgfTsKCiAgICAgIHJlbmRlcmVyLm9uUGFydGljbGVEZWFkID0gcGFydGljbGUgPT4ge307CgogICAgICBjb25zdCBkcmF3UG9seWdvbiA9IChwYXJ0aWNsZSwgY291bnQpID0+IHsKICAgICAgICBpZiAoY291bnQgPj0gNykgewogICAgICAgICAgY29udGV4dC5hcmMocGFydGljbGUucC54LCBwYXJ0aWNsZS5wLnksIHBhcnRpY2xlLnJhZGl1cywgMCwgTWF0aC5QSSAqIDIsIHRydWUpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zdCByYWRpdXMgPSBwYXJ0aWNsZS5yYWRpdXM7CgogICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPD0gY291bnQ7IGkrKykgewogICAgICAgICAgICBsZXQgeCA9IHBhcnRpY2xlLnAueCArIHJhZGl1cyAqIE1hdGguY29zKE1hdGguUEkgLyAxODAgKiAzNjAgLyBjb3VudCAqIGkpOwogICAgICAgICAgICBsZXQgeSA9IHBhcnRpY2xlLnAueSArIHJhZGl1cyAqIE1hdGguc2luKE1hdGguUEkgLyAxODAgKiAzNjAgLyBjb3VudCAqIGkpOwogICAgICAgICAgICBpZiAoaSA9PT0gMCkgY29udGV4dC5tb3ZlVG8oeCwgeSk7ZWxzZSBjb250ZXh0LmxpbmVUbyh4LCB5KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH07CgogICAgICByZXR1cm4gcmVuZGVyZXI7CiAgICB9LAoKICAgIGNyZWF0ZUVtaXR0ZXIoewogICAgICBtYWluRW1pdHRlciwKICAgICAgY2FudmFzLAogICAgICB4LAogICAgICB5LAogICAgICByYWRpdXMsCiAgICAgIGNvbG9yID0gQ09MT1IsCiAgICAgIHpvbmUgPSAiZGVhZCIsCiAgICAgIG9uY2UgPSAiYWxsIiwKICAgICAgYWxwaGEgPSAwLjg1LAogICAgICBncmF2aXR5ID0gMy41CiAgICB9KSB7CiAgICAgIGNvbnN0IGVtaXR0ZXIgPSB0aGlzLnByb3Rvbi5wb29sLmdldChQcm90b24uRW1pdHRlcik7CgogICAgICBpZiAoIWVtaXR0ZXIuY29tcGxldGVkKSB7CiAgICAgICAgZW1pdHRlci5yYXRlID0gbmV3IFByb3Rvbi5SYXRlKHRoaXMubnVtID8gbmV3IFByb3Rvbi5TcGFuKHRoaXMubnVtKSA6IG5ldyBQcm90b24uU3Bhbig0LCA5KSwgbmV3IFByb3Rvbi5TcGFuKDEuNiwgMi4yKSk7CiAgICAgICAgY29uc3QgcmFkaXVzSW5pdCA9IG1haW5FbWl0dGVyID8gbmV3IFByb3Rvbi5SYWRpdXMoMTAsIDExMCkgOiBuZXcgUHJvdG9uLlJhZGl1cygzLCByYWRpdXMpOwogICAgICAgIGVtaXR0ZXIuYWRkSW5pdGlhbGl6ZShuZXcgUHJvdG9uLk1hc3MoMSkpOwogICAgICAgIGVtaXR0ZXIuYWRkSW5pdGlhbGl6ZShyYWRpdXNJbml0KTsKICAgICAgICBlbWl0dGVyLmFkZEluaXRpYWxpemUobmV3IFByb3Rvbi5MaWZlKDMsIDYpKTsKICAgICAgICBlbWl0dGVyLmFkZEluaXRpYWxpemUobmV3IFByb3Rvbi5WZWxvY2l0eShuZXcgUHJvdG9uLlNwYW4oNCwgNiksIG5ldyBQcm90b24uU3BhbigtOTAsIDkwKSwgInBvbGFyIikpOwogICAgICAgIGVtaXR0ZXIuYWRkQmVoYXZpb3VyKG5ldyBQcm90b24uQWxwaGEoYWxwaGEsIDAuMikpOwogICAgICAgIGVtaXR0ZXIuYWRkQmVoYXZpb3VyKG5ldyBQcm90b24uQ29sb3IoY29sb3IpKTsKICAgICAgICBlbWl0dGVyLmFkZEJlaGF2aW91cihuZXcgUHJvdG9uLlNjYWxlKDEsIDAuMykpOwogICAgICAgIGVtaXR0ZXIuYWRkQmVoYXZpb3VyKG5ldyBQcm90b24uUm90YXRlKCkpOwogICAgICAgIGVtaXR0ZXIuYWRkQmVoYXZpb3VyKG5ldyBQcm90b24uR3Jhdml0eShncmF2aXR5KSk7CiAgICAgICAgZW1pdHRlci5hZGRCZWhhdmlvdXIodGhpcy5jdXN0b21EZWFkQmVoYXZpb3VyKGNhbnZhcykpOwogICAgICAgIGVtaXR0ZXIuYWRkQmVoYXZpb3VyKG5ldyBQcm90b24uQ3Jvc3Nab25lKG5ldyBQcm90b24uUmVjdFpvbmUoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KSwgem9uZSkpOwogICAgICB9CgogICAgICBlbWl0dGVyLnAueCA9IHg7CiAgICAgIGVtaXR0ZXIucC55ID0geTsKICAgICAgaWYgKG9uY2UgPT09ICJvbmNlIikgZW1pdHRlci5lbWl0KCJvbmNlIik7ZWxzZSBlbWl0dGVyLmVtaXQoKTsKICAgICAgdGhpcy5wcm90b24uYWRkRW1pdHRlcihlbWl0dGVyKTsgLy90aGlzLmV4cGlyZUVtaXR0ZXIoZW1pdHRlcik7CiAgICB9LAoKICAgIGV4cGlyZUVtaXR0ZXIoZW1pdHRlcikgewogICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICBlbWl0dGVyLmNvbXBsZXRlZCA9IHRydWU7CiAgICAgICAgdGhpcy5wcm90b24ucG9vbC5leHBpcmUoZW1pdHRlcik7CiAgICAgICAgdGhpcy5wcm90b24ucmVtb3ZlRW1pdHRlcihlbWl0dGVyKTsKICAgICAgfSwgNTAwKTsKICAgIH0sCgogICAgY3VzdG9tRGVhZEJlaGF2aW91cihjYW52YXMpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBpbml0aWFsaXplOiBwYXJ0aWNsZSA9PiB7CiAgICAgICAgICBwYXJ0aWNsZS5kYXRhID0gcGFydGljbGUuZGF0YSB8fCB7fTsKICAgICAgICAgIHBhcnRpY2xlLmRhdGEub2xkUmFkaXVzID0gcGFydGljbGUucmFkaXVzOwogICAgICAgICAgcGFydGljbGUuZGF0YS5lbWl0dGVyQ291bnQgPSAwOwogICAgICAgIH0sCiAgICAgICAgYXBwbHlCZWhhdmlvdXI6IHBhcnRpY2xlID0+IHsKICAgICAgICAgIGlmIChwYXJ0aWNsZS5yYWRpdXMgPCA1KSByZXR1cm47CiAgICAgICAgICBpZiAocGFydGljbGUuZGF0YS5lbWl0dGVyQ291bnQgPj0gMikgcmV0dXJuOwoKICAgICAgICAgIGlmIChwYXJ0aWNsZS5yYWRpdXMgPD0gMSAvIDMgKiBwYXJ0aWNsZS5kYXRhLm9sZFJhZGl1cykgewogICAgICAgICAgICBwYXJ0aWNsZS5kYXRhLmVtaXR0ZXJDb3VudCsrOwogICAgICAgICAgICB0aGlzLmNyZWF0ZUVtaXR0ZXIoewogICAgICAgICAgICAgIGNhbnZhcywKICAgICAgICAgICAgICB4OiBwYXJ0aWNsZS5wLngsCiAgICAgICAgICAgICAgeTogcGFydGljbGUucC55LAogICAgICAgICAgICAgIHJhZGl1czogcGFydGljbGUucmFkaXVzICogKDEgLyAyKSwKICAgICAgICAgICAgICBhbHBoYTogMC41LAogICAgICAgICAgICAgIGdyYXZpdHk6IDUsCiAgICAgICAgICAgICAgY29sb3I6IHBhcnRpY2xlLmNvbG9yLAogICAgICAgICAgICAgIG9uY2U6ICJvbmNlIgogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH07CiAgICB9LAoKICAgIHJlbmRlclByb3RvbigpIHsKICAgICAgdGhpcy5wcm90b24gJiYgdGhpcy5wcm90b24udXBkYXRlKCk7CiAgICB9CgogIH0sCgogIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0cnkgewogICAgICB0aGlzLnByb3Rvbi5kZXN0cm95KCk7CiAgICAgIFJBRk1hbmFnZXIucmVtb3ZlKHRoaXMucmVuZGVyUHJvdG9uKTsKICAgIH0gY2F0Y2ggKGUpIHt9CiAgfQoKfTs="},{"version":3,"mappings":"AAYA;AACA;AACA;AAEA,eACA,SADA,EAEA,SAFA,EAGA,SAHA,EAIA,SAJA,EAKA,SALA,EAMA,SANA,EAOA,SAPA,EAQA,SARA;AAWA;EACAA,wBADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC,cADA;IAEAA,cAFA;IAGAC,WAHA;IAIAC,aAJA;IAKAC,WALA;IAMAC;EANA,CALA;EAaAC;IACAC;MACA;MACA;MACA;MACA;QACAN,MADA;QAEAO,YAFA;QAGAC,aAHA;QAIAC,iBAJA;QAKAC;MALA;MAQAC;IACA,CAdA;;IAeAC;MAAAC;MAAAC;IAAA;MACA;IACA,CAjBA;;IAkBAC,qBAlBA;;IAoBAC;MACA;MACA;MACA;IACA,CAxBA;;IA0BAC;MACA;MACA;;MACAC;QACAC;MACA,CAFA;;MAIAD;QACAE;MACA,CAFA;;MAIAF;QACAC;QACAA;QACAA;QAEAA;QACAA;QACAA;QAEAA;QACAE;QAEAF;QACAA;QACAA;QACAA;MACA,CAhBA;;MAkBAD;;MAEA;QACA;UACAC,YACAC,YADA,EAEAA,YAFA,EAGAA,eAHA,EAIA,CAJA,EAKAE,WALA,EAMA,IANA;QAQA,CATA,MASA;UACA;;UAEA;YACA,QACAF,eACAG,kDAFA;YAGA,QACAH,eACAG,kDAFA;YAIA,uCACAJ;UACA;QACA;MACA,CAzBA;;MA2BA;IACA,CArFA;;IAuFAK;MACAf,WADA;MAEAT,MAFA;MAGAO,CAHA;MAIAC,CAJA;MAKAe,MALA;MAMArB,aANA;MAOAQ,aAPA;MAQAe,YARA;MASAC,YATA;MAUAC;IAVA,GAWA;MACA;;MAEA;QACAC,+BACA,4DADA,EAEA,yBAFA;QAKA,iCACA,0BADA,GAEA,4BAFA;QAGAA;QACAA;QACAA;QACAA,sBACA,oBACA,qBADA,EAEA,wBAFA,EAGA,OAHA,CADA;QAQAA;QACAA;QACAA;QACAA;QACAA;QAEAA;QACAA,qBACA,qBACA,sDADA,EAEAlB,IAFA,CADA;MAMA;;MAEAkB;MACAA;MACA,+CACAA;MAEA,gCA3CA,CA4CA;IACA,CA/IA;;IAiJAC;MACAC;QACAF;QACA;QACA;MACA,CAJA,EAIA,GAJA;IAKA,CAvJA;;IAyJAG;MACA;QACAC;UACAZ;UACAA;UACAA;QACA,CALA;QAMAa;UACA;UACA;;UAEA;YACAb;YACA;cACApB,MADA;cAEAO,eAFA;cAGAC,eAHA;cAIAe,iCAJA;cAKAG,UALA;cAMAC,UANA;cAOAzB,qBAPA;cAQAuB;YARA;UAUA;QACA;MAvBA;IAyBA,CAnLA;;IAoLAS;MACA;IACA;;EAtLA,CAbA;;EAqMAC;IACA;MACA;MACAxB;IACA,CAHA,CAGA;EACA;;AA1MA","names":["name","components","CanvasComp","props","canvas","bg","color","num","config","methods","canvasInited","x","y","mainEmitter","zone","RAFManager","canvasResize","width","height","canvasMouseDown","createProton","createRenderer","renderer","context","particle","drawPolygon","Math","radius","createEmitter","once","alpha","gravity","emitter","expireEmitter","setTimeout","customDeadBehaviour","initialize","applyBehaviour","renderProton","beforeDestroy"],"sourceRoot":"node_modules/particles-bg-vue/src/particles-bg/particles","sources":["PolygonParticles.vue"],"sourcesContent":["<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"xor\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nconst COLOR = [\n  \"#f6b93b\",\n  \"#18dcff\",\n  \"#cd84f1\",\n  \"#ED4C67\",\n  \"#ffffff\",\n  \"#b71540\",\n  \"#32ff7e\",\n  \"#ff3838\"\n];\n\nexport default {\n  name: \"PolygonParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.createProton(canvas);\n      this.createEmitter({\n        canvas,\n        x: width / 2,\n        y: height / 2,\n        mainEmitter: true,\n        zone: \"bound\"\n      });\n\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      this.proton = new Proton();\n      const renderer = this.createRenderer(canvas);\n      this.proton.addRenderer(renderer);\n    },\n\n    createRenderer(canvas) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CustomRenderer();\n      renderer.onProtonUpdate = () => {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleCreated = particle => {\n        particle.data.count = Proton.MathUtil.randomAToB(3, 10, true);\n      };\n\n      renderer.onParticleUpdate = particle => {\n        context.save();\n        context.globalAlpha = particle.alpha;\n        context.fillStyle = particle.color;\n\n        context.translate(particle.p.x, particle.p.y);\n        context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n        context.translate(-particle.p.x, -particle.p.y);\n\n        context.beginPath();\n        drawPolygon(particle, particle.data.count);\n\n        context.closePath();\n        context.fill();\n        context.globalAlpha = 1;\n        context.restore();\n      };\n\n      renderer.onParticleDead = particle => {};\n\n      const drawPolygon = (particle, count) => {\n        if (count >= 7) {\n          context.arc(\n            particle.p.x,\n            particle.p.y,\n            particle.radius,\n            0,\n            Math.PI * 2,\n            true\n          );\n        } else {\n          const radius = particle.radius;\n\n          for (let i = 0; i <= count; i++) {\n            let x =\n              particle.p.x +\n              radius * Math.cos((((Math.PI / 180) * 360) / count) * i);\n            let y =\n              particle.p.y +\n              radius * Math.sin((((Math.PI / 180) * 360) / count) * i);\n\n            if (i === 0) context.moveTo(x, y);\n            else context.lineTo(x, y);\n          }\n        }\n      };\n\n      return renderer;\n    },\n\n    createEmitter({\n      mainEmitter,\n      canvas,\n      x,\n      y,\n      radius,\n      color = COLOR,\n      zone = \"dead\",\n      once = \"all\",\n      alpha = 0.85,\n      gravity = 3.5\n    }) {\n      const emitter = this.proton.pool.get(Proton.Emitter);\n\n      if (!emitter.completed) {\n        emitter.rate = new Proton.Rate(\n          this.num ? new Proton.Span(this.num) : new Proton.Span(4, 9),\n          new Proton.Span(1.6, 2.2)\n        );\n\n        const radiusInit = mainEmitter\n          ? new Proton.Radius(10, 110)\n          : new Proton.Radius(3, radius);\n        emitter.addInitialize(new Proton.Mass(1));\n        emitter.addInitialize(radiusInit);\n        emitter.addInitialize(new Proton.Life(3, 6));\n        emitter.addInitialize(\n          new Proton.Velocity(\n            new Proton.Span(4, 6),\n            new Proton.Span(-90, 90),\n            \"polar\"\n          )\n        );\n\n        emitter.addBehaviour(new Proton.Alpha(alpha, 0.2));\n        emitter.addBehaviour(new Proton.Color(color));\n        emitter.addBehaviour(new Proton.Scale(1, 0.3));\n        emitter.addBehaviour(new Proton.Rotate());\n        emitter.addBehaviour(new Proton.Gravity(gravity));\n\n        emitter.addBehaviour(this.customDeadBehaviour(canvas));\n        emitter.addBehaviour(\n          new Proton.CrossZone(\n            new Proton.RectZone(0, 0, canvas.width, canvas.height),\n            zone\n          )\n        );\n      }\n\n      emitter.p.x = x;\n      emitter.p.y = y;\n      if (once === \"once\") emitter.emit(\"once\");\n      else emitter.emit();\n\n      this.proton.addEmitter(emitter);\n      //this.expireEmitter(emitter);\n    },\n\n    expireEmitter(emitter) {\n      setTimeout(() => {\n        emitter.completed = true;\n        this.proton.pool.expire(emitter);\n        this.proton.removeEmitter(emitter);\n      }, 500);\n    },\n\n    customDeadBehaviour(canvas) {\n      return {\n        initialize: particle => {\n          particle.data = particle.data || {};\n          particle.data.oldRadius = particle.radius;\n          particle.data.emitterCount = 0;\n        },\n        applyBehaviour: particle => {\n          if (particle.radius < 5) return;\n          if (particle.data.emitterCount >= 2) return;\n\n          if (particle.radius <= (1 / 3) * particle.data.oldRadius) {\n            particle.data.emitterCount++;\n            this.createEmitter({\n              canvas,\n              x: particle.p.x,\n              y: particle.p.y,\n              radius: particle.radius * (1 / 2),\n              alpha: 0.5,\n              gravity: 5,\n              color: particle.color,\n              once: \"once\"\n            });\n          }\n        }\n      };\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n"]}]}